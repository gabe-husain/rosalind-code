
mod solutions;


//Problem 1
//use solutions::DNA::{count_nucleotide, count_nucleotide_onepass};
//Problem 2
//use solutions::RNA::{transcribe};
//Problem 3
use solutions::REVC::{complement};

fn main() {
    let string = "TATGCCGTGACAGTTAGCGATACAGCCACACGCTGGATGTGGTCAATTGCATGGTCCAGACTGGGGGTCAGGTCCGCGCCGCGCTAAATGATCAGAAACCCACGTTGTCGCCTGCCGTATTCTCTTAAATAGTTGGTTCAGTTAATACGAGCTAACGACTCACGTCCGGTTGAGTTATTCGCCCAGTTTTGTTCAGCCGTGCCGTGACCGCTTTTTGAGACAAGACCTGCTGTCACCATAATTAGGGCGAGTTATATCAATCCGTTGTATGCATATTATGCCATCAATCGCGCATACTCCAATAGCGAAGGGCATTAGGGGTCAAGGGACCGTTCCTTGCCCCGGTCTAGTAGCGAGCAATGGGTCGACCAGTTATCGTCGAGGCATAATTGACTTGTTTATAAGACTAGACTAAGTCGTACCCGCGTGTTAGATATTTGCCGCAACTCGCTTCGGACTTGTCCAAGCCATACGATTGCAAGCGTGGCATTCATAGTTACACGTCAATCGTACAGGATCCTTACCTCTCGCGCTCCTAGCAATAGCTTACTCTCCCATGCATGGGCGACAGCACGGGCCTAATCGTCCGGCCGCCGGAATCCGGTTTTTCGTACAACTAAGTATTAGCTGACTTACTGATTCGTGCTCCCCTATGAGGCGTCAGACCGTACCGCTTCAAATGATGTGCGGCTCGATAAGTCCCAAACCGTTTTTGATGTCCCTGATAGCCAAGGCGTGCAGTTCATCCCTCAGAGGATCATCACAAGTATGAAGTTGGGAATAGTGTTGCCTTGCGAGAGCGATGTCCTTTGGGTCCTCTTACCAACAGTGATCTGGGAAGACGGGGATAGTCGACACTAACCCATATGGGGGCTAGCTGTCGACCACCGATTTATTCCCAGCTAAA";
    let complement: String = complement(string);
    println!("{}", complement);
}
